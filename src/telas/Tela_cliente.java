/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package telas;

import CLASSES.Cliente;
import DAO.ClienteDao;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author m10816361
 */
public class Tela_cliente extends javax.swing.JInternalFrame {

    ArrayList<Cliente> clientes = new ArrayList();

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela_Principal().setVisible(true);
            }
        });
    }

    /**
     * Creates new form T_editar_cliente
     */
    public Tela_cliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_telefone = new javax.swing.JTextField();
        txt_email = new javax.swing.JTextField();
        btn_Editar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_observacoes = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        lbl_nome = new javax.swing.JLabel();
        lbl_nascimento = new javax.swing.JLabel();
        lbl_endereco = new javax.swing.JLabel();
        lbl_telefone = new javax.swing.JLabel();
        lbl_email = new javax.swing.JLabel();
        lbl_observacoes = new javax.swing.JLabel();
        txt_nome = new javax.swing.JTextField();
        txt_nascimento = new javax.swing.JTextField();
        txt_endereco = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_editar_cliente = new javax.swing.JTable();
        lbl_buscar_pelo_nome = new javax.swing.JLabel();
        txt_busca_por_nome = new javax.swing.JTextField();
        btn_buscar_pelo_nome = new javax.swing.JButton();
        lbl_id = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        btn_inserir = new javax.swing.JButton();
        btn_apagar = new javax.swing.JButton();
        btn_limpar = new javax.swing.JButton();

        setBorder(null);
        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        btn_Editar.setText("Atualizar");
        btn_Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EditarActionPerformed(evt);
            }
        });

        txt_observacoes.setColumns(20);
        txt_observacoes.setRows(5);
        jScrollPane1.setViewportView(txt_observacoes);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Tela de Edição dos dados do Cliente");

        lbl_nome.setText("Nome:");

        lbl_nascimento.setText("Nascimento:");

        lbl_endereco.setText("Endereço:");

        lbl_telefone.setText("Telefone:");

        lbl_email.setText("Emai:");

        lbl_observacoes.setText("Observações:");

        table_editar_cliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Cliente", "Telefone", "E-mail"
            }
        ));
        table_editar_cliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_editar_clienteMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_editar_cliente);

        lbl_buscar_pelo_nome.setText("Buscar Cliente pelo nome :");

        btn_buscar_pelo_nome.setText("Buscar");
        btn_buscar_pelo_nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscar_pelo_nomeActionPerformed(evt);
            }
        });

        lbl_id.setText("ID");

        txt_id.setEnabled(false);
        txt_id.setEditable(false);

        btn_inserir.setText("Inserir");
        btn_inserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inserirActionPerformed(evt);
            }
        });

        btn_apagar.setText("Apagar");
        btn_apagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_apagarActionPerformed(evt);
            }
        });

        btn_limpar.setText("Limpar");
        btn_limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbl_id)
                    .addComponent(lbl_observacoes)
                    .addComponent(lbl_email)
                    .addComponent(lbl_telefone)
                    .addComponent(lbl_endereco)
                    .addComponent(lbl_nascimento)
                    .addComponent(lbl_nome))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_inserir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Editar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_apagar, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_limpar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(159, 159, 159))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_nome)
                                    .addComponent(txt_nascimento)
                                    .addComponent(txt_endereco)
                                    .addComponent(txt_telefone)
                                    .addComponent(txt_email)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_id, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(lbl_buscar_pelo_nome)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txt_busca_por_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_buscar_pelo_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_buscar_pelo_nome)
                    .addComponent(txt_busca_por_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_buscar_pelo_nome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_id)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_nome)
                            .addComponent(txt_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_nascimento)
                            .addComponent(txt_nascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_endereco)
                            .addComponent(txt_endereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_telefone)
                            .addComponent(txt_telefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_email)
                            .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_observacoes)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Editar)
                    .addComponent(btn_inserir)
                    .addComponent(btn_apagar)
                    .addComponent(btn_limpar))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EditarActionPerformed

        ClienteDao clienteDao = new ClienteDao();
        Cliente cliente = new Cliente();
        boolean atualizar;
        boolean validar;
        Integer resposta;

        cliente.setNome(txt_nome.getText());
        cliente.setTelefone(txt_telefone.getText());
        cliente.setEmail(txt_email.getText());

        validar = validar_inserir_atualizar();

        if (validar == true) {
            resposta = JOptionPane.showConfirmDialog(null, "Certeza que deseja Atualizar os dados do Cliente?");
            if (resposta == JOptionPane.YES_OPTION) {
                cliente.setId(Integer.valueOf(txt_id.getText()));
                cliente.setNome(txt_nome.getText());
                cliente.setNascimento(txt_nascimento.getText());
                cliente.setEndereco(txt_endereco.getText());
                cliente.setTelefone(txt_telefone.getText());
                cliente.setEmail(txt_email.getText());
                cliente.setObservacoes(txt_observacoes.getText());

                try {
                    atualizar = clienteDao.Atualizar(cliente);
                    if (atualizar == true) {
                        JOptionPane.showMessageDialog(null, "Dados Atualizados com Sucesso...");
                        txt_busca_por_nome.setText(cliente.getNome());
                        limpar();
                    }
                } catch (SQLException ex) {
                    JOptionPane.showInternalMessageDialog(null, "Erro, favor contatar o Administrador do sistema:");
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showInternalMessageDialog(null, "Erro, favor contatar o Administrador do sistema:");
                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Dados não Atualizados, verifique os dados e tente novamente.");
    }//GEN-LAST:event_btn_EditarActionPerformed
        atualizar_tbl_clientes();
    }

    private void btn_buscar_pelo_nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscar_pelo_nomeActionPerformed

        String nome_cliente = txt_busca_por_nome.getText();
        ClienteDao clienteDao = new ClienteDao();
        Cliente cliente = new Cliente();
        DefaultTableModel model = (DefaultTableModel) table_editar_cliente.getModel();
        model.setRowCount(0);

        if (txt_busca_por_nome.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, digite um nome para realizar a busca.");
        } else {

            try {
                clientes = clienteDao.buscarClientes(nome_cliente);
                if (clientes.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Cliente não encontrado.");
                    txt_busca_por_nome.setText("");
                    limpar();
                }
            } catch (ClassNotFoundException ex) {
                JOptionPane.showInternalMessageDialog(null, "Erro, favor contatar o Administrador do sistema:");
            }

        }
        atualizar_tbl_clientes();
    }//GEN-LAST:event_btn_buscar_pelo_nomeActionPerformed

    private void btn_inserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inserirActionPerformed

        Cliente cliente = new Cliente();
        boolean inserir;
        boolean validar;
        Integer resposta;

        cliente.setNome(txt_nome.getText());
        cliente.setNascimento(txt_nascimento.getText());
        cliente.setEndereco(txt_endereco.getText());
        cliente.setTelefone(txt_telefone.getText());
        cliente.setEmail(txt_email.getText());
        cliente.setObservacoes(txt_observacoes.getText());

        ClienteDao clienteDao = new ClienteDao();
        validar = validar_inserir_atualizar();

        if (validar == true) {
            resposta = JOptionPane.showConfirmDialog(null, "Certeza que deseja Inserir o novo Cliente?");
            if (resposta == JOptionPane.YES_OPTION) {
                try {
                    inserir = clienteDao.inserir(cliente);
                    if (inserir == true) {
                        JOptionPane.showMessageDialog(null, "Dados Inseridos com sucesso.");
                        txt_busca_por_nome.setText(cliente.getNome());
                        atualizar_tbl_clientes();
                        limpar();
                    }
                } catch (SQLException ex) {
                    JOptionPane.showInternalMessageDialog(null, "Erro, favor contatar o Administrador do sistema:");
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showInternalMessageDialog(null, "Erro, favor contatar o Administrador do sistema:");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Dados não Inseridos, verifique os dados e tente novamente.");
        }
        atualizar_tbl_clientes();
// TODO add your handling code here:
    }//GEN-LAST:event_btn_inserirActionPerformed

    private void btn_apagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_apagarActionPerformed

        Integer indice = table_editar_cliente.getSelectedRow();
        Cliente cliente = new Cliente();
        if (indice > -1) {
            cliente = clientes.get(indice);
            ClienteDao clienteDao = new ClienteDao();
            boolean apagar;
            boolean verificar = false;
            Integer resposta;
            resposta = JOptionPane.showConfirmDialog(null, "Certeza que deseja Apagar o Item Selecionado?");
            if (resposta == JOptionPane.YES_OPTION) {
                try {
                    apagar = clienteDao.Apagar(cliente.getId());
                    verificar = clienteDao.buscar_por_id(cliente.getId());
                    if (apagar == true) {
                        JOptionPane.showInternalMessageDialog(null, "Dados apagados com sucesso?");
                    } else {
                        JOptionPane.showInternalMessageDialog(null, "Dados não podem ser apagados devido a possuir outras relações no banco de dados?");
                    }
                    txt_busca_por_nome.setText(cliente.getNome());
                    atualizar_tbl_clientes();
                    limpar();
                    // TODO add your handling code here:
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showInternalMessageDialog(null, "Erro, favor contatar o Administrador do sistema:");
                }
            }
        } else {
            JOptionPane.showInternalMessageDialog(null, "Favor clique no item da tabela que deseja excluir:");
        }
    }//GEN-LAST:event_btn_apagarActionPerformed

    private void btn_limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limparActionPerformed
        limpar();
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_limparActionPerformed

    private void table_editar_clienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_editar_clienteMouseClicked
        try {
            Integer indice = table_editar_cliente.getSelectedRow();
            String nome = "" + table_editar_cliente.getValueAt(table_editar_cliente.getSelectedRow(), 1);
            Cliente cliente = new Cliente();
            cliente = clientes.get(indice);

            txt_id.setText(cliente.getId().toString());
            txt_nome.setText(cliente.getNome());
            txt_nascimento.setText(cliente.getNascimento());
            txt_endereco.setText(cliente.getEndereco());
            txt_telefone.setText(cliente.getTelefone());
            txt_email.setText(cliente.getEmail());
            txt_observacoes.setText(cliente.getObservacoes());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Por favor, clique em uma linha válida.");
        }


    }//GEN-LAST:event_table_editar_clienteMouseClicked

    private void limpar() {

        DefaultTableModel model = (DefaultTableModel) table_editar_cliente.getModel();
        model.setRowCount(0);
        clientes.clear();
        txt_id.setText("");
        txt_email.setText("");
        txt_endereco.setText("");
        txt_nascimento.setText("");
        txt_nome.setText("");
        txt_observacoes.setText("");
        txt_telefone.setText("");
        txt_busca_por_nome.setText("");
       
    }

    private void atualizar_tbl_clientes() {

        String nome_cliente = txt_busca_por_nome.getText();
        ClienteDao clienteDao = new ClienteDao();
        Cliente cliente = new Cliente();
        DefaultTableModel model = (DefaultTableModel) table_editar_cliente.getModel();
        model.setRowCount(0);

        if (txt_busca_por_nome.getText().trim().equals("")) {
        } else {
            try {

                clientes = clienteDao.buscarClientes(nome_cliente);

            } catch (ClassNotFoundException ex) {
                JOptionPane.showInternalMessageDialog(null, "Erro, favor contatar o Administrador do sistema:");
            }

            for (Cliente c : clientes) {
                String nome;
                String telefone;
                String email;
                nome = c.getNome();
                telefone = c.getTelefone();
                email = c.getEmail();
                model.addRow(new Object[]{nome, telefone, email});
            }
        }
    }

    boolean validar_inserir_atualizar() {

        if (txt_nome.getText().trim().equals("") || txt_telefone.getText().trim().equals("") || txt_email.getText().trim().equals("")) {
            return false;
        } else {
            return true;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Editar;
    private javax.swing.JButton btn_apagar;
    private javax.swing.JButton btn_buscar_pelo_nome;
    private javax.swing.JButton btn_inserir;
    private javax.swing.JButton btn_limpar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_buscar_pelo_nome;
    private javax.swing.JLabel lbl_email;
    private javax.swing.JLabel lbl_endereco;
    private javax.swing.JLabel lbl_id;
    private javax.swing.JLabel lbl_nascimento;
    private javax.swing.JLabel lbl_nome;
    private javax.swing.JLabel lbl_observacoes;
    private javax.swing.JLabel lbl_telefone;
    private javax.swing.JTable table_editar_cliente;
    private javax.swing.JTextField txt_busca_por_nome;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_endereco;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_nascimento;
    private javax.swing.JTextField txt_nome;
    private javax.swing.JTextArea txt_observacoes;
    private javax.swing.JTextField txt_telefone;
    // End of variables declaration//GEN-END:variables
}
